trigger:
  - master

pr:
  - master

variables:
  serverImageName: 'gfawcett22/simple-pipeline-server'
  appImageName: 'gfawcett22/simple-pipeline-app'

stages:
  - stage: CI
    displayName: CI
    jobs:
    - job: CI
      pool:
        vmImage: 'Ubuntu-16.04'
      steps:

      - task: HelmInstaller@1
        displayName: Helm installer
        inputs:
          helmVersionToInstall: 2.15.1

      - script: helm lint $(System.DefaultWorkingDirectory)/helm/simple-pipeline/
        displayName: Helm Lint

      - task: Docker@2
        displayName: Build server
        inputs:
          repository: $(serverImageName)
          tags: 'latest'
          command: build
          Dockerfile: server/Dockerfile 
      
      - task: Docker@2
        displayName: Build app
        inputs:
          repository: $(appImageName)
          tags: 'latest'
          command: build
          Dockerfile: app/Dockerfile
      
      - script: |
          docker login -u $(dockerId) -p $(dockerPassword)
          docker push $(serverImageName):latest
          docker push $(appImageName):latest
        displayName: Docker push
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      
      # Copies Helm chart to $(Build.ArtifactStagingDirectory)
      - task: HelmDeploy@0
        inputs:
          command: 'package'
          chartPath: '$(System.DefaultWorkingDirectory)/helm/simple-pipeline'
          chartVersion: '1.0.0'
        displayName: Package Helm Chart
      
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: 'artifacts'
        displayName: Publish Pipeline Artifacts in $(Build.ArtifactStagingDirectory)

  - stage: Deploy
    dependsOn: CI
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
    - deployment: Deploy
      pool:
        vmImage: 'Ubuntu-16.04'
      environment: 'nonprod'
      strategy:
        runOnce:
          deploy:
            steps:

            - task: HelmInstaller@1
              displayName: Helm installer
              inputs:
                helmVersionToInstall: 2.15.1
            
            - script: |
                set -euo pipefail
                
                if [[ ! -e $(find $AGENT_BUILDDIRECTORY/artifacts/simple-pipeline-*.tgz) ]]; then
                    echo "Could not find Helm chart artifact at directory: $AGENT_BUILDDIRECTORY/artifacts/"
                    exit 1
                fi
                echo "##vso[task.setvariable variable=HELM_CHART_PACKAGE]$(find $AGENT_BUILDDIRECTORY/artifacts/simple-pipeline-*.tgz)"
              displayName: Get full path to Helm Chart artifact

            - task: HelmDeploy@0
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: ''
                namespace: 'simple-pipeline'
                command: 'install'
                chartType: 'FilePath'
                chartPath: '$(HELM_CHART_PACKAGE)'
                releaseName: 'simple-pipeline'
                overrideValues: 'ingress.enabled=$(ingressEnabled)'
              condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            
      
